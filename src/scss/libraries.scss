@import 'materialize';
@import '../../\\@fortawesome/fontawesome-free/scss/fontawesome';
@import '../../\\@fortawesome/fontawesome-free/scss/brands';
@import '../../\\@fortawesome/fontawesome-free/scss/regular';
@import '../../\\@fortawesome/fontawesome-free/scss/solid';


$fa-font-path: '../assets/fonts';
$fa-version: '5.2.0';
@font-face {
  font-family: 'FontAwesome';
  src: url('#{$fa-font-path}/fontawesome-webfont.eot?v=#{$fa-version}');
  src: url('#{$fa-font-path}/fontawesome-webfont.eot?#iefix&v=#{$fa-version}') format('embedded-opentype'),
    url('#{$fa-font-path}/fontawesome-webfont.woff2?v=#{$fa-version}') format('woff2'),
    url('#{$fa-font-path}/fontawesome-webfont.woff?v=#{$fa-version}') format('woff'),
    url('#{$fa-font-path}/fontawesome-webfont.ttf?v=#{$fa-version}') format('truetype'),
    url('#{$fa-font-path}/fontawesome-webfont.svg?v=#{$fa-version}#fontawesomeregular') format('svg');
//  src: url('#{$fa-font-path}/FontAwesome.otf') format('opentype'); // used when developing fonts
  font-weight: normal;
  font-style: normal;
}


@font-face {
  font-family: 'Gloria Hallelujah';
  src: url('../assets/fonts/GloriaHallelujah.ttf');
  src: url('../assets/fonts/GloriaHallelujah.ttf') format('truetype'),
    url('https://fonts.gstatic.com/s/gloriahallelujah/v9/LYjYdHv3kUk9BMV96EIswT9DIbW-MIS11zM.woff2') format('woff2');
  font-weight: 400;
  font-style: normal;
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}


@mixin timeline-positions ( $begin-year, $end-year, $rows, $years-per-row ) {
  $year-ratio: 100% / $years-per-row ;
  $padding: $year-ratio / 2;

  @for $i from 1 through $rows {
    @for $j from 1 through ( $years-per-row - 1 ) {
      $year: $begin-year + (( $i - 1 ) * ( $years-per-row - 1 )) + ( $j - 1 );
      $year-position: $year-ratio * ( $j - 1 );
      @for $k from 1 through 12 {
        @if $j != $years-per-row or $k < 2 {
          $month-position: ( $year-ratio / 12 ) * ( $k - 1 );
          $total-left: $padding + $year-position + $month-position;
          $total-right: 100% - $total-left - ( $year-ratio / 12 );

          .from-#{$year}-#{$k} {
            .line, &.line, &.card, &.timeline-details {
              left: $total-left;
            }

            @if $j == 1 and $k == 1 {
              &::before {
                content: '';
                left: 0;
                width: $padding;
              }
            }
          }

          @if $j != 1 or $k != 1 {
            .to-#{$year}-#{$k} {
              .line, &.line, &.card, &.timeline-details {
                right: $total-right;
              }
  
              @if $j == ( $years-per-row - 1 ) and $k == 12 {
                &::after {
                  content: '';
                  right: 0;
                  width: $padding;
                }
              }
            }
          }
        }
      }
    }
  }
}
